version: '3'
services:
  backend:
    command: bash -c 'npm run build && npm run start'
    depends_on:
      - database
    env_file:
      - ./config/backend.env
    environment:
      NODE_ENV: production
      DATABASE_NAME: thomasgranbohm
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_USERNAME: thomas
      DATABASE_PASSWORD: 5Zm5234Am4G9bZAbpS96BQz3
    expose:
      - '1337'
    image: node:14
    user: node
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
  database:
    image: postgres
    environment:
      POSTGRES_DB: thomasgranbohm
      POSTGRES_USER: thomas
      POSTGRES_PASSWORD: 5Zm5234Am4G9bZAbpS96BQz3
    volumes:
      - database:/var/lib/postgresql/data
  frontend:
    depends_on:
      - backend
    command: bash -c '/test-endpoint.sh backend 1337 && npm run build && npm run start'
    env_file:
      - ./config/frontend.env
    expose:
      - '3000'
    image: node:14
    user: node
    volumes:
      - ./frontend:/home/node/app
      - ./scripts/test-endpoint.sh:/test-endpoint.sh
    working_dir: /home/node/app
  nginx:
    command: bash -c '/test-endpoint.sh backend 1337 && echo "Starting NGiNX..." && nginx -g "daemon off;"'
    depends_on:
      - frontend
    image: nginx
    restart: unless-stopped
    ports:
      - ${NGINX_PORT:-9000}:80
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./scripts/test-endpoint.sh:/test-endpoint.sh
volumes:
  database:
    driver: local
